"""Takes a pickle generated by term_grabber.py and inserts into the database.

Usage:
  Put terms.pickle in the same directory as insert_terms.py
  `PYTHONPATH="/home/colin/projects/django/" DJANGO_SETTINGS_MODULE="emmontoweb.settings" python insert_terms.py`

"""
class OntologyTerm:
  def __init__(self, id, label, tag_label, definition, category):
    self.id = id
    self.label = label
    self.tag_label = tag_label
    self.definition = definition
    self.category = category

  def __str__(self):
    return "%s -- %s %s" % (self.id, self.category, self.tag_label)


if __name__ == "__main__":
  import pickle
  f = file("terms.pickle", "r")
  terms = pickle.load(f)
  f.close()
#  with open("terms.pickle", "r") as f:
#    terms = pickle.load(f)

  # Find max lengths.
  label_len = 0
  tag_label_len = 0
  definition_len = 0
  category_len = 0
  for t in terms:
    label_len = max(len(t.label), label_len)
    tag_label_len = max(len(t.tag_label), tag_label_len)
    definition_len = max(len(t.definition), definition_len)
    category_len = max(len(t.category), category_len)

  print "label: %d\ntag_label: %d\ndefinition: %d\ncategory: %d" % (label_len, tag_label_len, definition_len, category_len)
  from tagger.models import OntologyTerm
  for t in terms:
    OntologyTerm.objects.create(id=int(t.id.split(":")[1]), label=t.label, tag_label=t.tag_label, definition=t.definition, category=t.category)
  print "done"
